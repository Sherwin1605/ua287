on load:
	ParticlesReload()



	
function ParticlesCreateConfigFile():
	load yaml "unlimited_adventures/AdventureCore/spawn_particles.yml" as "config"

	set yaml value "version" from "config" to 1
	set the comments of yaml node "version" from "config" to "Please DO NOT change version number!"

	set yaml value "particles.enabled" from "config" to true
	set the comments of yaml node "particles" from "config" to "" and "In this file you can turn off the spawn particles." and ""
	save yaml "config"



function ParticlesReload():
	load yaml "unlimited_adventures/AdventureCore/spawn_particles.yml" as "config"
	if yaml value "version" from "config" is not set:
		wait 1 tick
		ParticlesCreateConfigFile()
	
	
	if yaml value "particles.enabled" from "config" is set:
		set {particles::enabled} to yaml value "particles.enabled" from "config"
	save yaml "config"






every 5 seconds:
	if {particles::enabled} is true:
		set {_big_waterfall} to location(639, 59.5, 963, world "spawn")
		set {_wilderness_portal} to location(757, 76, 980, world "spawn")
		set {_ranchers_garden} to location(810, 98, 820, world "spawn")
		set {_ancient_traveler} to location(780, 85, 885, world "spawn")
		set {_mine} to location(706, 72, 852, world "spawn")
		loop 20 times:
			draw 50 cloud at {_big_waterfall} with offset vector(0.5, 0.5, 2.5) with extra 0.02
			draw 300 ash at {_wilderness_portal} with offset vector(4, 2, 2) with extra 0
			draw 10 spore blossom air at {_ranchers_garden} with offset vector(6, 2, 8) with extra 0
			draw 7 white ash at {_ancient_traveler} with offset vector(3, 2, 3) with extra 0
			draw 50 ash at {_mine} with offset vector(7, 3, 7) with extra 0
			wait 0.25 second



command /particlesreload:
	permission: admin
	trigger:
		ParticlesReload()




every second:
	loop {players::*}:
		CaveParticles(loop-value)
		ShineParticles(loop-value)


function CaveParticles(player: player):
	if world of {_player} is not "spawn":
		if light level at {_player} <= 14:
			if y coordinate of {_player} < 30:
				if highest block at {_player} is set:
					loop 2 times:
						draw 100 ash at location 3 meter above {_player} with offset vector(7, 2, 7) with extra 0
						wait 0.5 second

function ShineParticles(player: player):
#	if {_player}'s tool is any diamond tool or any netherite tool or diamond sword or netherite sword:
#		set {_shine} to true
	if GetCustomItemId({_player}'s helmet) is "dragonscale_helmet":
		set {_shine} to true
	if GetCustomItemId({_player}'s chestplate) is "dragonscale_chestplate":
		set {_shine} to true
	if GetCustomItemId({_player}'s leggings) is "dragonscale_leggings":
		set {_shine} to true
	if GetCustomItemId({_player}'s boots) is "dragonscale_boots":
		set {_shine} to true
	if {_player}'s helmet slot is diamond helmet or netherite helmet:
		set {_shine} to true
	if {_player}'s chestplate slot is diamond chestplate or netherite chestplate:
		set {_shine} to true
	if {_player}'s leggings slot is diamond leggings or netherite leggings:
		set {_shine} to true
	if {_player}'s boots slot is diamond boots or netherite boots:
		set {_shine} to true
	if {_shine} is true:
		loop 2 times:
			draw 1 sculk charge pop at location 1 meter above {_player} with offset vector(0.3, 0.4, 0.3) with extra 0
			wait 0.5 second


#on damage:
#	if victim is skeleton:
#		loop random integer between 2 and 5 times:
#			BoneParticle(location of victim)

function BoneParticle(loc: location):
	add 1 to y coordinate of {_loc}
	set pitch of {_loc} to random integer between -30 and 30
	set yaw of {_loc} to random integer between -30 and 30
	spawn item display at {_loc}
	set {_display} to last spawned item display
	set display item of {_display} to bone
	set {_size} to random number between 0.5 and 0.8
	set display scale of {_display} to vector({_size},{_size},1)

	set {_vector} to {_loc}
	set pitch of {_vector} to random number between 0 and -50
	set yaw of {_vector} to random number between -360 and 360
	set display translation of {_display} to vector(0,-0.1,0)
	shoot a snowball from {_vector} at speed 0.25
	set {_bone} to last shot snowball
	make {_display} ride {_bone}

#    set {_fraction} to {_size}/6
#    set {_size} to 0.1
#    loop 5 times:
#        add {_fraction} to {_size}
#        set display scale of {_display} to vector({_size},{_size},loop-number/5)
#        wait 1 tick
    
	wait 5 ticks
	push {_bone} downwards with speed 0.2
	wait 0.5 second
    
#    loop 5 times:
#        wait 1 tick
#        subtract {_fraction} from {_size}
#        set display scale of {_display} to vector({_size},{_size},1-(loop-number/5))

	kill {_display}


